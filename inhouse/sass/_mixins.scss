// Mixins

//Media Query
@mixin mQ($arg...) {
	@if length($arg) == 1 {
		@media screen and (max-width: nth($arg, 1)) {
			@content;
		}
	}
	@if length($arg) == 2 {
		@media screen and (max-width: nth($arg, 1)) and (min-width: nth($arg, 2)) {
			@content;
		}
	}

}

//Media Query Minimum
@mixin mQMin($arg...) {
	@if length($arg) == 1 {
		@media screen and (min-width: nth($arg, 1)) {
			@content;
		}
	}
}

//Custom Button (default)
@mixin customButton($arg...) {
	// Change only the background color
	@if length($arg) == 1 {
		background-color: nth($arg, 1);
		color: $white;

		&:hover, &:active, &:focus, &:active:hover {
			background-color: lighten(nth($arg, 1), 10%);
			color: $white;
		}

		&:active:focus {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 1), 15%);
		}
	}

	// Change both background color and text color
	@if length($arg) == 2 {
		background-color: nth($arg, 1);
		color: nth($arg, 2);

		&:hover, &:active, &:focus, &:active:hover {
			background-color: lighten(nth($arg, 1), 10%);
			color: nth($arg, 2);
		}

		&:active:focus {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 2), 15%);
		}
	}
}

@mixin customButton2($arg...) {
	// Change only the background color
	@if length($arg) == 1 {
		background-color: nth($arg, 1);
		color: darken($white, 5%);

		&:hover {
			background-color: lighten(nth($arg, 1), 10%);
			color: $white;
		}

		&:active {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 1), 15%);
		}
	}

	// Change both background color and text color
	@if length($arg) == 2 {
		background-color: nth($arg, 1);
		color: darken(nth($arg, 2), 5%);

		&:hover {
			background-color: lighten(nth($arg, 1), 10%);
			color: nth($arg, 2);
		}

		&:active {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 1), 15%);
		}
	}
}

@mixin customButtonDark($arg...) {
	// Change only the background color
	@if length($arg) == 1 {
		background-color: nth($arg, 1);
		color: darken($white, 5%);

		&:hover {
			background-color: darken(nth($arg, 1), 10%);
			color: $white;
		}

		&:active {
			background-color: darken(nth($arg, 1), 20%);
			color: darken(nth($arg, 1), 30%);
		}
	}

	// Change both background color and text color
	@if length($arg) == 2 {
		background-color: nth($arg, 1);
		color: darken(nth($arg, 2), 5%);

		&:hover {
			background-color: darken(nth($arg, 1), 10%);
			color: nth($arg, 2);
		}

		&:active {
			background-color: darken(nth($arg, 1), 20%);
			color: darken(nth($arg, 1), 30%);
		}
	}
}

@mixin customButtonLight($arg...) {
	// Change only the background color
	@if length($arg) == 1 {
		background-color: nth($arg, 1);
		color: $white;

		&:hover, &:active, &:focus, &:active:hover {
			background-color: lighten(nth($arg, 1), 5%);
			color: $white;
		}

		&:active:focus {
			background-color: lighten(nth($arg, 1), 10%);
			color: $white;
		}
	}

	// Change both background color and text color
	@if length($arg) == 2 {
		background-color: nth($arg, 1);
		color: nth($arg, 2);

		&:hover, &:active, &:focus, &:active:hover {
			background-color: lighten(nth($arg, 1), 5%);
			color: nth($arg, 2);
		}

		&:active:focus {
			background-color: lighten(nth($arg, 1), 10%);
			color: nth($arg, 2);
		}
	}
}

//Custom Button Inverse
@mixin customButtonInverse($arg...) {
	padding: 5px 12px;
	border-width: 2px;
	border-style: solid;
	font-weight: 700;

	// Change only the background color
	@if length($arg) == 1 {
		background-color: $white;
		color: nth($arg, 1);
		border-color: nth($arg, 1);

		&:hover, &:active, &:focus, &:active:hover {
			background-color: nth($arg, 1);
			color: $white;
		}

		&:active:focus {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 1), 15%);
		}
	}

	// Change both background color and text color
	@if length($arg) == 2 {
		background-color: nth($arg, 2);
		color: nth($arg, 1);
		border-color: nth($arg, 1);

		&:hover, &:active, &:focus, &:active:hover {
			background-color: nth($arg, 1);
			color: nth($arg, 2);
		}

		&:active:focus {
			background-color: darken(nth($arg, 1), 5%);
			color: darken(nth($arg, 2), 15%);
		}
	}
}

@mixin inputButtonPair($arg...) {
	margin-left: 20%;
	margin-right: 20%;
	
	@include mQ(1024px) {
		margin-left: 15px;
		margin-right: 15px;
	}

	.col-sm-7 {
		padding-left: 0px;
		padding-right: 10px;

		@include mQ(768px) {
			padding-right: 0px;
		}
	}

	.col-sm-5 {
		padding-left: 0px;
		padding-right: 0px;
	}

	.input-search {
		position: relative;
		margin-bottom: 15px;
		font-size: 16px;

		input {
			margin-right: 10px;
			padding: 17px 16px 17px 16px;
			height: 52px;
			font-size: 16px;

			@include mQ(768px) {
				margin-right: 0px;
			}
		}

		.fa-spinner {
			position: absolute;
			top: 18px;
			right: 10px;
		}
	}

	input {
		margin-right: 10px;
		margin-bottom: 15px;
		padding: 17px 16px 17px 16px;
		height: 52px;
		font-size: 16px;

		@include mQ(768px) {
			margin-right: 0px;
		}
	}

	button {
		margin-bottom: 15px;
		padding: 17px 30px 17px 30px;
		height: 52px;
		font-size: 16px;
		font-weight: 700;
	}
}

//Custom Side Button
@mixin customButtonSide($bgcolor, $textcolor, $border: white) {
	background-color: $bgcolor;
	border: 1px solid $border;
	color: $textcolor;

	&:hover, &:active, &:focus {
		background-color: darken($bgcolor, 10%);
		border: 3px solid darken($bgcolor, 10%);
		color: lighten($textcolor, 10%);
	}
}

@mixin customButtonSideLight($bgcolor, $textcolor, $border: white) {
	background-color: $bgcolor;
	border: 1px solid $border;
	color: $textcolor;

	&:hover, &:active, &:focus {
		background-color: lighten($bgcolor, 10%);
		border: 3px solid lighten($bgcolor, 10%);
		color: darken($textcolor, 10%);
	}
}

@mixin customSectionColorSetter($arg...) {
	// Change only the background color
	@if length($arg) == 1 {
		background-color: nth($arg, 1);

		h1, h2, h3, h4, h5, h6, p, li {
			color: $black;
		}
	}

	// Change background color and text colors
	@if length($arg) == 2 {
		background-color: nth($arg, 1);

		h1, h2, h3, h4, h5, h6, p, li {
			color: nth($arg, 2);
		}
	}

	// Change background color, header, and subheader colors
	@if length($arg) == 3 {
		background-color: nth($arg, 1);

		h1, h2 {
			color: nth($arg, 2);
		}

		h3, h4, h5, h6, p, li {
			color: nth($arg, 3);
		}
	}
}

@mixin conversionSection($arg...) {
	padding: 4% 0;

	@if length($arg) == 1 {
		@include customSectionColorSetter(nth($arg, 1));
	}

	@if length($arg) == 2 {
		@include customSectionColorSetter(nth($arg, 1), nth($arg, 2));
	}

	@if length($arg) >= 3 {
		@include customSectionColorSetter(nth($arg, 1), nth($arg, 2), nth($arg, 3));
	}

	@if length($arg) > 3 {
		padding: nth($arg, 4) 0;
	}

	@include mQ(768px) {
		padding: 15% 0;
	}

	.description {
		padding-bottom: 20px;

		@include mQ(768px) {
			padding-left: 15%;
			padding-right: 15%;
		}
	}

	h2 {
		padding-bottom: 10px;
		font-size: 26px;
		font-weight: 700;
		line-height: 1.4;

		@include mQ(480px) {
			font-size: 24px;
		}
	}

	h4 {
		line-height: 1.5;

		@include mQ(480px) {
			font-size: 16px;
			line-height: 1.8;
		}
	}

	li {
		font-size: 18px;
		line-height: 1.5;

		@include mQ(480px) {
			font-size: 16px;
			line-height: 1.8;
		}
	}

	button {
		margin-bottom: 15px;
		padding: 17px 30px 17px 30px;
		height: 52px;
		font-size: 16px;
		font-weight: 700;

		@include mQ(480px) {
			padding: 15px 25px 15px 25px;
			font-size: 14px;
		}

		@include mQ(360px) {
			padding: 14px 22px 14px 22px;
			font-size: 12px;
		}
	}
}

@mixin genericSectionInfo($bgcolor) {
	@if $bgcolor {
		background-color: $bgcolor;
	}

	margin-top: 40px;
	margin-left: auto;
	margin-right: auto;
	padding: 30px;
	width: $screen-md-min;

	@include mQ($screen-md-min) {
		width: 100%;
	}

	label {
		font-size: 18px;
	}

	input {
		margin-bottom: 10px;
	}
}

@mixin singlePageSection($arg...) {
	padding: 8% 0;

	@if length($arg) == 1 {
		@include customSectionColorSetter(nth($arg, 1));
	}

	@if length($arg) == 2 {
		@include customSectionColorSetter(nth($arg, 1), nth($arg, 2));
	}

	@if length($arg) >= 3 {
		@include customSectionColorSetter(nth($arg, 1), nth($arg, 2), nth($arg, 3));
	}

	@if length($arg) > 3 {
		padding: nth($arg, 4) 0;
	}

	@include mQ($screen-md-min) {
		padding: 0;
	}

	.description {
		padding-bottom: 20px;
	}

	h1 {
		padding-bottom: 10px;
		font-size: 32px;
		font-weight: 700;
		line-height: 1.4;

		@include mQ(480px) {
			font-size: 28px;
		}
	}

	h2 {
		padding-bottom: 10px;
		font-size: 26px;
		font-weight: 700;
		line-height: 1.4;

		@include mQ(480px) {
			font-size: 24px;
		}
	}

	h4 {
		padding-bottom: 5px;
		line-height: 1.5;

		@include mQ(480px) {
			font-size: 16px;
			line-height: 1.8;
		}
	}

	button {
		margin-bottom: 15px;
		padding: 17px 30px 17px 30px;
		height: 52px;
		font-size: 16px;
		font-weight: 700;

		@include mQ(480px) {
			padding: 15px 25px 15px 25px;
			font-size: 14px;
		}

		@include mQ(360px) {
			padding: 14px 22px 14px 22px;
			font-size: 12px;
		}
	}
}

// Panels
@mixin panelCustom($bgcolor, $textcolor, $bordercolor, $badgetextcolor: white) {
	border-color: $bordercolor;

	&>.panel-heading {
		color: $textcolor;
		background-color: $bgcolor;
		border-color: $bgcolor;

		.badge {
			color: $badgetextcolor;
			background-color: $textcolor;
		}
	}

}

@mixin badgeCustom($bgcolor, $textcolor: white) {
	color: $textcolor !important;
	background-color: $bgcolor !important;
}

// Theme
@mixin themeCustom($bgcolor, $textcolor) {
	&:hover, &:focus {
		background: $bgcolor;
		border-color: $bgcolor;
		color: $textcolor;
		cursor: pointer;
	}
}

// Button Tabs
@mixin buttonTab() {
	padding: 15px;
	border-radius: 4px;
	margin-bottom: 5px;

	@include mQ($screen-xxs-max) {
		padding: 5px;
	}

	h1, h2, h3, h4, h5, h6 {
		margin-top: 0px;
		margin-bottom: 5px;
	}

	h2 {
		@include mQ($screen-sm-max) {
			font-size: 24px;
		}
	}

	h6 {
		@include mQ($screen-sm-max) {
			font-size: 12px;
		}
	}

	&.btn-transition.hover,
	&.btn-transition.focus,
	&:hover, &:focus {
	    -ms-transform: translate(0px,-2px); /* IE 9 */
	    -webkit-transform: translate(0px,-2px); /* Safari */
	    transform: translate(0px,-2px); /* Standard syntax */
	    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
		cursor: pointer;
	}

	&.btn-transition.active,
	&:active {
	    -ms-transform: translate(0px,-1px); /* IE 9 */
	    -webkit-transform: translate(0px,-1px); /* Safari */
	    transform: translate(0px,-1px); /* Standard syntax */
	    box-shadow: 0 3px 6px 0 rgba(0, 0, 0, 0.2), 0 4px 14px 0 rgba(0, 0, 0, 0.19);
		cursor: pointer;
	}
}

@mixin buttonTabCustom($bgcolor, $textcolor, $lightness: 20%) {
	background: lighten($bgcolor, $lightness);
	border-color: lighten($bgcolor, $lightness);
	color: lighten($textcolor, $lightness);

	@include buttonTab();

	&.btn-transition.hover,
	&.btn-transition.focus,
	&.btn-transition.active,
	&:hover, &:focus, &:active {
		background: $bgcolor;
		border-color: $bgcolor;
		color: $textcolor;
	}
}

@mixin buttonTabCustomLight($bgcolor, $textcolor, $lightness: 20%) {
	background: darken($bgcolor, $lightness);
	border-color: darken($bgcolor, $lightness);
	color: lighten($textcolor, $lightness * 5);

	@include buttonTab();

	&.btn-transition.hover,
	&.btn-transition.focus,
	&.btn-transition.active,
	&:hover, &:focus, &:active {
		background: $bgcolor;
		border-color: $bgcolor;
		color: $textcolor;
	}
}

@mixin buttonEmbossed($bgcolor, $textcolor) {
	background: $bgcolor;
	border-color: $bgcolor;
	color: $textcolor;
	cursor: default;

	&:hover, &:focus, &:active {
		color: $textcolor;
	}
}

// Wells
@mixin well-variant($background, $border, $text-color) {
  background-color: $background !important;
  border-color: $border !important;
  color: $text-color !important;

  hr {
    border-top-color: darken($border, 5%);
  }
}
